[{"path":"https://seq-koala-monitoring.github.io/data-pipeline/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 SEQKoalaDataPipeline authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v01-setup.html","id":"initial-setup","dir":"Articles","previous_headings":"","what":"Initial setup","title":"1. Setup","text":"package relies data directory (home_dir) stores datasets used analysis. first step involves setting path computer directory following files: basedata.gdb: ArcGIS geodatabase study area (seqrp_study_area_2017_mga56) final_covariates.gdb: ArcGIS geodatabase covariate raster layers final_covariates_raster: directory containing GeoTIFF files covariates final_covariates.gdb R read raster files ArcGIS GDB koala_survey_data_ver2_0.gdb: geodatabase containing koala survey data KoalaSurveyData2020_cur.accdb: ACCESS database containing data 2020 onwards SEQkoalaData.accdb: ACCESS database containing data 1996-2015 directory can stored anywhere computer.","code":"#data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" data_dir <- \"C:\\\\Users\\\\uqfcho\\\\Documents/seq-koala-monitoring/working_data\" fcn_set_home_dir(data_dir) list.files(data_dir) #>  [1] \"basedata.gdb\"                   \"final_covariates.gdb\"           \"final_covariates_raster\"        #>  [4] \"koala_survey_data_ver2_0.gdb\"   \"KoalaSurveyData.gdb\"            \"KoalaSurveyData2020_cur.accdb\"  #>  [7] \"KoalaSurveyData2020_cur.laccdb\" \"KoalaSurveySites\"               \"SEQkoalaData.accdb\"             #> [10] \"SEQkoalaData_info.pdf\"          \"SEQkoalaQueries.accdb\"          \"test_grid.gdb\""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v01-setup.html","id":"generate-fishnet-grid","dir":"Articles","previous_headings":"","what":"Generate fishnet grid","title":"1. Setup","text":"Grids analysis can generated fly specifying grid size. generating grid calling fcn_set_grid_size, grid feature class stored local environment. Functions require newly generated grid able retrieve grid directly local environment. GridID column fishnet feature class uniquely identifies grid cell fishnet specific grid_size.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"2. Get Data","text":"","code":"#data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" data_dir <- \"C:\\\\Users\\\\uqfcho\\\\Documents/seq-koala-monitoring/working_data\" fcn_set_home_dir(data_dir) fcn_set_grid_size(100) # grid width/ height in meters, and generate grid in local environment #> class       : SpatRaster  #> dimensions  : 2467, 1759, 1  (nrow, ncol, nlyr) #> resolution  : 100, 100  (x, y) #> extent      : 378280, 554180, 6862464, 7109164  (xmin, xmax, ymin, ymax) #> coord. ref. : GDA2020 / MGA zone 56 (EPSG:7856)  #> source(s)   : memory #> name        :  GridID  #> min value   :       1  #> max value   : 2311397 fishnet <- fcn_get_grid() # Retrieve grid from environment for plotting"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"extract-data-from-the-database","dir":"Articles","previous_headings":"","what":"Extract data from the database","title":"2. Get Data","text":"line transect feature class table can extracted ACCESS database directly one function. Behind function call, R following steps: Establishes ODBC connection ACCESS database Executes SQL queries pull data database Reads columns start end northings eastings Generates spatial representation transect based columns one-liner solution extract line transect information 1996 2020 databases follows, producing -called “Master” database line transects. plot chunk unnamed-chunk-4 current iteration database, line transects 1996 database joined completely transect-level spatial representation. unique transect-level spatial representation found, line transect record joined transect-level spatial feature, possible falls back using site-level spatial representation. site-level representation found algorithm fall back removing record. demonstration see algorithm finds 386 line transect records can joined transect-level spatial feature, 169 can joined site level. 0 records discarded.","code":"line_transects <- fcn_line_transect_sf_all() #> Warning in fcn_line_transect_sf_1996(): Line Transect: attribute join incomplete.  #> Joined uniquely: 386.  #> Joined at the site level: 169.  #> Join failed: 0 summary(line_transects) #>       db             TransectID            SiteID            Date                        #>  Length:2973        Length:2973        Min.   :   1.0   Min.   :2001-08-28 00:00:00.00   #>  Class :character   Class :character   1st Qu.: 122.0   1st Qu.:2020-06-18 00:00:00.00   #>  Mode  :character   Mode  :character   Median : 414.0   Median :2021-07-16 00:00:00.00   #>                                        Mean   : 508.5   Mean   :2019-06-13 13:51:38.69   #>                                        3rd Qu.: 814.0   3rd Qu.:2022-03-23 00:00:00.00   #>                                        Max.   :1301.0   Max.   :2022-12-20 00:00:00.00   #>                                                                                          #>     TrSiteID         Tlength        Number_Sightings Number_Observers Start_Eastings   Start_Northings   #>  Min.   :   1.0   Min.   :  19.42   Min.   :0.0000   Min.   : 1.000   Min.   :399462   Min.   :6870195   #>  1st Qu.: 111.0   1st Qu.: 225.89   1st Qu.:0.0000   1st Qu.: 2.000   1st Qu.:466486   1st Qu.:6939289   #>  Median : 416.0   Median : 447.00   Median :0.0000   Median : 2.000   Median :491304   Median :6972091   #>  Mean   : 481.7   Mean   : 524.38   Mean   :0.1968   Mean   : 2.089   Mean   :484220   Mean   :6975309   #>  3rd Qu.: 814.0   3rd Qu.: 732.00   3rd Qu.:0.0000   3rd Qu.: 2.000   3rd Qu.:501596   3rd Qu.:6998764   #>  Max.   :1301.0   Max.   :2281.24   Max.   :8.0000   Max.   :70.000   Max.   :550605   Max.   :7106583   #>                                                      NA's   :1        NA's   :169      NA's   :169       #>   End_Eastings    End_Northings              geometry    #>  Min.   :399394   Min.   :6870028   LINESTRING   :2804   #>  1st Qu.:466512   1st Qu.:6939332   MULTIPOLYGON : 169   #>  Median :491315   Median :6972042   epsg:7856    :   0   #>  Mean   :484223   Mean   :6975309   +proj=utm ...:   0   #>  3rd Qu.:501631   3rd Qu.:6998784                        #>  Max.   :551033   Max.   :7106708                        #>  NA's   :169      NA's   :169 ggplot(line_transects, aes(x = Number_Sightings)) +   geom_histogram(bins = 10) +   theme_bw()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"data","dir":"Articles","previous_headings":"Extract data from the database","what":"1996-2015 data","title":"2. Get Data","text":"user can also opt extract just line transect data 1996 database. warning message shows notifying end user indeed line transects joined site-level.","code":"table_sf_1996 <- fcn_line_transect_sf_1996() #> Warning in fcn_line_transect_sf_1996(): Line Transect: attribute join incomplete.  #> Joined uniquely: 386.  #> Joined at the site level: 169.  #> Join failed: 0 nrow(table_sf_1996) #> [1] 555"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"onwards-data","dir":"Articles","previous_headings":"Extract data from the database","what":"2020 onwards data","title":"2. Get Data","text":"Equivalently can extract data 2020 database. errors thrown line transect identified uniquely using coordinate information. Define bounding box plotting can draw simple plot show line transects particular region ggplot. plot line transects grid cells. plot chunk line_transect_plot","code":"table_sf_2020 <- fcn_line_transect_sf_2020() nrow(table_sf_2020) #> [1] 2418 bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) bbox_sf <- sf::st_polygon(list(matrix(c(bbox$xlim[1], bbox$ylim[1], bbox$xlim[2], bbox$ylim[1], bbox$xlim[1], bbox$ylim[2], bbox$xlim[2], bbox$ylim[2],bbox$xlim[1], bbox$ylim[1]), ncol=2, byrow=T))) bbox_sf <- sf::st_sfc(bbox_sf) sf::st_crs(bbox_sf) <- fcn_get_state()$crs fishnet_bbox <- terra::crop(fishnet, terra::vect(bbox_sf)) fishnet_plot <- ggplot() +   geom_spatraster(data = fishnet_bbox %>% mutate(grid_id_plot = substr(GridID, nchar(GridID), nchar(GridID))), aes(fill = grid_id_plot)) +   do.call(coord_sf, bbox) +   theme_bw()+   scale_fill_brewer(palette = \"Set3\") +   guides(fill = 'none')+   theme(panel.grid = element_blank()) transect_plot <- ggplot() +   geom_sf(data = line_transects, color = '#D55E00') +   do.call(coord_sf, bbox) +   theme_bw()+   theme(panel.grid = element_blank()) fishnet_plot + transect_plot"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"perpendicular-distances","dir":"Articles","previous_headings":"Extract data from the database","what":"Perpendicular distances","title":"2. Get Data","text":"Perpendicular distances can extracted following function calls. produces following columns: TransectID: matches many--one TransectID line transect tables SightingID: uniquely identifies koala sighting, id assigned “TransectID”.”SightingNumber” Perp_Dist: perpendicular distance koala sighting following line checks number koala sightings line transect table matches number koala sightings reported perpendicular distances table. numbers identical sign successful data extraction.","code":"perp_distance_1996 <- fcn_perp_distance_table_1996() perp_distance_2020 <- fcn_perp_distance_table_2020() perp_distance_all <- fcn_perp_distance_all() nrow(perp_distance_all) #> [1] 585 sum(line_transects$Number_Sightings) #> [1] 585"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"strip-transects","dir":"Articles","previous_headings":"","what":"Strip transects","title":"2. Get Data","text":"Strip transects extracted using similar interface. Likewise line transects, strip transects joined spatial representation geodatabase, fallback joining site level exact match transect level found.","code":"strip_transects <- fcn_strip_transect_sf_all() #> Warning in fcn_strip_transect_sf_all(): Strip Transect: attribute join incomplete.  #> Joined uniquely: 951.  #> Joined at the site level: 1726.  #> Join failed: 0"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"all-of-area-searches","dir":"Articles","previous_headings":"","what":"All of area searches","title":"2. Get Data","text":"Similarly, data area searches can extracted using following function:","code":"uaoa <- fcn_all_of_area_sf_all() sum(uaoa$Number_Sightings) #> [1] 650"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"summary-tables","dir":"Articles","previous_headings":"","what":"Summary tables","title":"2. Get Data","text":"script fcn_all_tables extracts tables list structure. Summary statistics can produced full table. example, count number koalas sighted LGA.","code":"master <- fcn_all_tables() summary_table <- fcn_summarise_sightings(c('LGA', 'Method', 'db')) summary_table #> # A tibble: 27 × 4 #> # Groups:   LGA, Method [26] #>    LGA            Method         db        Sightings #>    <chr>          <chr>          <chr>         <int> #>  1 Brisbane       line_transect  2020-cur         33 #>  2 Brisbane       strip_transect 1996-2015       743 #>  3 Brisbane       uaoa           1996-2015         0 #>  4 Gold Coast     line_transect  2020-cur         41 #>  5 Gold Coast     strip_transect 1996-2015        29 #>  6 Gold Coast     uaoa           1996-2015        24 #>  7 Ipswich        line_transect  2020-cur         47 #>  8 Ipswich        strip_transect 1996-2015        37 #>  9 Ipswich        uaoa           1996-2015         3 #> 10 Lockyer Valley line_transect  2020-cur          6 #> # ℹ 17 more rows"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v03-linear-referencing.html","id":"linear-referencing-dynamic-segmentation","dir":"Articles","previous_headings":"","what":"Linear referencing / dynamic segmentation","title":"3. Linear Referencing","text":"linear referencing/ dynamic segmentation approach used relate line transects grid information covariate layers. can used derive outputs statistical model, tables generated linear referencing serve purposes. toolbox linear referencing package allows user generate “Route Event Layer” (also referred “Route Event Tables” “Route Table”) fundamental way routes (.e. Transects) represented linear referencing. linear referencing terminology, transect represented “route”. record “Route Event Layer” stores distance start transect “Event” occurred. event can intersection grid cell, certain values within covariate layer. Using fcn_route_table call, can create “Route Event Layer” records “Event” TransectID relates event back transect concerned. function call creates new columns records attributes event: FMEAS: “Measure”, distance start point transect event starts TMEAS: “Measure”, distance start point transect event ends Variable Name (e.g. GridID): value event, case, GridID grid cell “Event” describing Tlength: transect length lpercent: percentage (proportion) transect covered event results event route layer can viewed using fcn_locate_feature_from_route segments line transects based route event layer. operation segments line transects many different small segments - slow route event layer large, especially applied high-resolution grid cells route event layers rasterized covariate layers (described ). many cases, route event layer table sufficient spatial representation linear referencing results, step can inspect results visually. , see line transects successfully segmented border grid cells, colored different ID numbers Grid transects colored last digit GridID: plot chunk linear_referencing_transects","code":"#data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" data_dir <- \"C:\\\\Users\\\\uqfcho\\\\Documents/seq-koala-monitoring/working_data\" fcn_set_home_dir(data_dir) table_sf_2020 <- fcn_line_transect_sf_2020() fcn_set_grid_size(100) # grid width/ height in meters, and generate grid in local environment #> class       : SpatRaster  #> dimensions  : 2467, 1759, 1  (nrow, ncol, nlyr) #> resolution  : 100, 100  (x, y) #> extent      : 378280, 554180, 6862464, 7109164  (xmin, xmax, ymin, ymax) #> coord. ref. : GDA2020 / MGA zone 56 (EPSG:7856)  #> source(s)   : memory #> name        :  GridID  #> min value   :       1  #> max value   : 2311397 fishnet <- fcn_get_grid() # Retrieve grid from environment for plotting bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) route_table <- fcn_route_table_raster(fishnet, table_sf_2020) head(route_table[route_table$lpercent < 0.5,c('TransectID', 'GridID', 'FMEAS', 'TMEAS', \"Tlength\", \"lpercent\")]) #>           TransectID  GridID     FMEAS     TMEAS  Tlength   lpercent #> 1 1.0_0_SOL.20210810 1406599  29.63936  39.51914 484.1095 0.02040816 #> 2 1.0_0_SOL.20210810 1406600  39.51914 177.83614 484.1095 0.28571429 #> 3 1.0_0_SOL.20210810 1406601 177.83614 187.71593 484.1095 0.02040816 #> 4 1.0_0_SOL.20210810 1405037 187.71593 306.27335 484.1095 0.24489796 #> 5 1.0_0_SOL.20210810 1405038 306.27335 345.79249 484.1095 0.08163265 #> 6 1.0_0_SOL.20210810 1403475 345.79249 434.71056 484.1095 0.18367347 route_features <- fcn_locate_feature_from_route(route_table, table_sf_2020) fishnet_bbox <- terra::crop(fishnet, terra::vect(bbox_sf)) fishnet_plot <- ggplot() +   geom_spatraster(data = fishnet_bbox %>% mutate(grid_id_plot = substr(GridID, nchar(GridID), nchar(GridID))), aes(fill = grid_id_plot)) +   do.call(coord_sf, bbox) +   theme_bw()+   scale_fill_brewer(palette = \"Set3\") +   guides(fill = 'none')+   theme(panel.grid = element_blank()) route_plot <- ggplot() +   geom_sf(data = route_features, aes(color = substr(GridID, nchar(GridID), nchar(GridID)))) +   do.call(coord_sf, bbox) +   scale_color_brewer(palette = \"Set3\") +   labs(color = \"\") +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank()) fishnet_plot + route_plot"},{"path":[]},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v04-covariates.html","id":"atemporal-rasters-covariate-extraction","dir":"Articles","previous_headings":"Covariate extraction","what":"Atemporal rasters covariate extraction","title":"4. Covariate extraction","text":"Likewise, capabilities linear referencing can applied extract covariate information Raster files. raster layer can loaded using fcn_covariate_raster_load. plot chunk unnamed-chunk-3 results linear referencing (route event layer) can inspected using approach . Creation segments take . seen outputs, values event layer (red) closely match underlying raster layer (blue). plot chunk htele_covariate","code":"cov <- fcn_covariate_raster_load(\"htele\") cov_route_table <- fcn_route_table_raster(cov, table_sf_2020) terra::plot(cov) head(cov_route_table) #>           TransectID       Date  Tlength    htele     FMEAS    TMEAS segment_length   lpercent #> 1 1.0_0_SOL.20210810 2021-08-10 484.1095 98.12614  39.51914 128.4372       88.91807 0.18367347 #> 2 1.0_0_SOL.20210810 2021-08-10 484.1095 90.80642 128.43721 167.9564       39.51914 0.08163265 #> 3 1.0_0_SOL.20210810 2021-08-10 484.1095 93.56960 167.95635 276.6340      108.67764 0.22448980 #> 4 1.0_0_SOL.20210810 2021-08-10 484.1095 87.75806 276.63400 296.3936       19.75957 0.04081633 #> 5 1.0_0_SOL.20210810 2021-08-10 484.1095 90.65868 296.39357 434.7106      138.31700 0.28571429 #> 6 1.0_0_SOL.20210810 2021-08-10 484.1095 99.36263 434.71056 484.1095       49.39893 0.10204082 cov_route_features <- fcn_locate_feature_from_route(cov_route_table, table_sf_2020) bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) ext <- terra::ext(bbox$xlim[1], bbox$xlim[2], bbox$ylim[1], bbox$ylim[2]) cov_crop <- terra::crop(cov, ext) limits <- terra::minmax(cov_crop) rast_plot <- ggplot() +   geom_spatraster(data = cov_crop) +   do.call(coord_sf, bbox)+   labs(fill = \"\") +   ggtitle(\"htele: covariate raster\") +   scale_fill_viridis_c(limits = c(limits[1], limits[2])) +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank()) transect_plot <- ggplot() +   geom_sf(data = cov_route_features, aes(color = htele), linewidth = 1) +   do.call(coord_sf, bbox)+   ggtitle(\"htele: extracted from transects\") +   labs(color = \"\") +   scale_color_viridis_c(limits = c(limits[1], limits[2])) +   theme_bw()+   theme(panel.grid = element_blank()) rast_plot + transect_plot + plot_layout(guides = 'collect')"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v04-covariates.html","id":"spatio-temporal-rasters","dir":"Articles","previous_headings":"Covariate extraction","what":"Spatio-temporal rasters","title":"4. Covariate extraction","text":"Extraction covariates spatio-temporal raster files also supported. algorithm first extracts spatio-temporal rasters multi-layer SpatRaster terra creates Event Route Layer spatio-temporal layers. covariates extracted multi-layer “SpatRaster” (terra package) names raster layers represents dates raster layer. year month raster layers available, dates raster layers assumed taken 15th month. date month expected relatively small effect covariate extracted. covariate value route event layer can matched date survey. covariate value representative date transect surveyed can interpolated following methods: bilinear: bilinear interpolation two closest dates survey date, weighted close survey two dates. survey date earlier later dates covariate layers, earliest latest covariate layer selected respectively nearest: covariate layer closest survey date used “lag1” / “lag2” / “lag3” (work progress): lagged layers – select first, second third layer available earlier survey date. lagged layer available, select earliest layer available. date matching algorithm creates / overwrites “value” column route_table output. preview extracted, interpolated value next recent layer spatio-temporal raster.","code":"cov_sptemp <- fcn_covariate_raster_load(\"hlwdy\") #> Warning in fcn_check_paths(path, paste(\"Database\", idx)): Database covariates does not exist in #> M:\\Users\\uqfcho\\Documents\\seq-koala-monitoring\\working_data/final_covariates_raster  #> Warning in fcn_check_paths(path, paste(\"Database\", idx)): Database covariates does not exist in #> M:\\Users\\uqfcho\\Documents\\seq-koala-monitoring\\working_data/final_covariates_raster  #> Warning in fcn_check_paths(path, paste(\"Database\", idx)): Database covariates does not exist in #> M:\\Users\\uqfcho\\Documents\\seq-koala-monitoring\\working_data/final_covariates_raster #> Error: [rast] filename is empty. Provide a valid filename names(cov_sptemp) #>  [1] \"X199607\" \"X199707\" \"X199807\" \"X199907\" \"X200007\" \"X200107\" \"X200207\" \"X200307\" \"X200407\" \"X200507\" \"X200607\" #> [12] \"X200707\" \"X200807\" \"X200907\" \"X201007\" \"X201107\" \"X201207\" \"X201307\" \"X201407\" \"X201507\" \"X201607\" \"X201707\" #> [23] \"X201807\" \"X201907\" cov_sptemp_route_table <- fcn_route_table_raster(cov_sptemp, table_sf_2020) #> Error in .External(structure(list(name = \"CppMethod__invoke_notvoid\", : NULL value passed as symbol address route_table_date_matched <- fcn_covariate_match_date(cov_sptemp_route_table, names(cov_sptemp), method = 'bilinear') #> Error in eval(expr, envir, enclos): object 'cov_sptemp_route_table' not found head(route_table_date_matched) #> Error in eval(expr, envir, enclos): object 'route_table_date_matched' not found cov_sptemp_date_matched <- fcn_locate_feature_from_route(route_table_date_matched, table_sf_2020) #> Error in eval(expr, envir, enclos): object 'route_table_date_matched' not found ext <- terra::ext(bbox$xlim[1], bbox$xlim[2], bbox$ylim[1], bbox$ylim[2]) cov_sptemp_crop <- terra::crop(cov_sptemp, ext) #> Error in .External(structure(list(name = \"CppMethod__invoke_notvoid\", : NULL value passed as symbol address limits <- terra::minmax(cov_sptemp_crop) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'minmax': object 'cov_sptemp_crop' not found rast_sptemp_plot <- ggplot() +   geom_spatraster(data = cov_sptemp_crop, aes(fill = X201907)) +   do.call(coord_sf, bbox)+   labs(fill = \"\") +   ggtitle(\"hlwdy: 2019/07 woody \\nvegetation cover\") +   scale_fill_viridis_c(limits = c(limits[1], limits[2])) +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank()) #> Error in eval(expr, envir, enclos): object 'cov_sptemp_crop' not found transect_sptemp_plot <- ggplot() +   geom_sf(data = cov_sptemp_date_matched, aes(color = value), linewidth = 1) +   do.call(coord_sf, bbox)+   ggtitle(\"hlwdy: transects (bilinear)\") +   labs(color = \"\") +   scale_color_viridis_c(limits = c(limits[1], limits[2])) +   theme_bw()+   theme(panel.grid = element_blank()) #> Error in eval(expr, envir, enclos): object 'cov_sptemp_date_matched' not found rast_sptemp_plot + transect_sptemp_plot + plot_layout(guides = 'collect') #> Error in eval(expr, envir, enclos): object 'rast_sptemp_plot' not found"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Frankie Cho. Author, maintainer. Jonathan Rhodes. Author.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cho F, Rhodes J (2023). SEQKoalaDataPipeline: South East Queensland Koala Monitoring Data Pipeline. R package version 0.0.0.9000, https://seq-koala-monitoring.github.io/data-pipeline/.","code":"@Manual{,   title = {SEQKoalaDataPipeline: South East Queensland Koala Monitoring Data Pipeline},   author = {Frankie Cho and Jonathan Rhodes},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://seq-koala-monitoring.github.io/data-pipeline/}, }"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"data-processing-pipeline-for-seq-koala-monitoring-data-analysis-project","dir":"","previous_headings":"","what":"South East Queensland Koala Monitoring Data Pipeline","title":"South East Queensland Koala Monitoring Data Pipeline","text":"R package functionality consumes ACCESS databases koala monitoring data outputs tables direct inputs Bayesian state-space model. user-friendly documentation package functionality available : documentation vignette describes usage toolbox provided custom R package SEQKoalaDataPipeline reads ACCESS databases koala monitoring data, spatial files monitoring transects, rasterised data covariates, produces outputs spatial data model. functions toolbox perform several functions useful producing data outputs statistical models functionalities. Features include limited following: Establish connections ACCESS ODBC Generate grids “fishnets” given spatial resolution around study area generates unique IDs grid cell Produce spatial feature classes (sf) line transects based start end coordinate columns dataframes Linear referencing: calculate proportion , distance segment origin, linear transect lying within grid cell Linear referencing: calculate proportion , distance segments origin, linear transect raster covariate layers Dynamic segmentation: return coordinates koala sightings based distance transect origin (work--progress) Dynamic segmentation: return covariate information koala sighting based linear referencing route tables (work--progress)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"South East Queensland Koala Monitoring Data Pipeline","text":"devtools installed local machine, package can installed using Github.","code":"devtools::install_github(\"seq-koala-monitoring/data-pipeline\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"data-structure","dir":"","previous_headings":"","what":"Data Structure","title":"South East Queensland Koala Monitoring Data Pipeline","text":"package produces table inputs statistical model, possibility export auxiliary columns processed survey data demand. data structure inputs follows.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"line-transects-2-tables","dir":"","previous_headings":"","what":"Line Transects (2 tables)","title":"South East Queensland Koala Monitoring Data Pipeline","text":"Table surveys (line separate transect surveyed) following fields: * Record unique ID (primary key) * Site number (unique ID relating spatial representation site surveyed– pre 2015 data) * Transect number (unique ID relating spatial representation transect surveyed – post 2015 data) * Date survey * Transect length * Number koalas observed * Number observers (although always 1 line transects) * Time location specific covariates (still discussed ) Table perpendicular distances observations (line relates specific koala observation): * Record unique ID (primary key) * Unique ID line transect table (relates survey koala observation occurred surveys table) * Perpendicular distance (noting sometimes calculated sighting distance angle sometimes perpendicular distance measured directly – discuss)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"strip-transects-1-table","dir":"","previous_headings":"","what":"Strip Transects (1 table)","title":"South East Queensland Koala Monitoring Data Pipeline","text":"Table surveys (line separate transect surveyed) following fields: * Record unique ID (primary key) * Site number (unique ID relating spatial representation site surveyed– pre 2015 data) * Transect number (unique ID relating spatial representation transect surveyed – post 2015 data) * Date survey * Transect area * Number koalas observed * Number observers * Time location specific covariates (still discussed )","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"all-of-area-searches-1-table","dir":"","previous_headings":"","what":"All of Area Searches (1 table)","title":"South East Queensland Koala Monitoring Data Pipeline","text":"Table surveys (line separate area search) following fields: * Record unique ID (primary key) * Site number (unique ID relating spatial representation site surveyed– pre 2015 data) * Area number (unique ID relating spatial representation area surveyed – post 2015 data) * Date survey * Area searches * Number koalas observed * Number observers * Time location specific covariates (still discussed )","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_check_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions — fcn_check_paths","title":"Helper functions — fcn_check_paths","text":"Check paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_check_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions — fcn_check_paths","text":"","code":"fcn_check_paths(path, suffix = \"\", stop_exec = F)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate to linestrings — fcn_coord_to_linestring","title":"Coordinate to linestrings — fcn_coord_to_linestring","text":"Coordinate linestrings","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate to linestrings — fcn_coord_to_linestring","text":"","code":"fcn_coord_to_linestring(   Start_Eastings,   Start_Northings,   End_Eastings,   End_Northings )"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate to SF — fcn_coord_to_points","title":"Coordinate to SF — fcn_coord_to_points","text":"Coordinate SF","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate to SF — fcn_coord_to_points","text":"","code":"fcn_coord_to_points(Start_Eastings, Start_Northings)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_layer_df.html","id":null,"dir":"Reference","previous_headings":"","what":"List covariate layers as a df — fcn_covariate_layer_df","title":"List covariate layers as a df — fcn_covariate_layer_df","text":"List covariate layers df","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_layer_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List covariate layers as a df — fcn_covariate_layer_df","text":"","code":"fcn_covariate_layer_df(layer = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_match_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","title":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","text":"Get covariate value spatio-temporal raster","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_match_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","text":"","code":"fcn_covariate_match_date(route_table, col_names, method = \"bilinear\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"Load covariate layer SpatRaster name","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"","code":"fcn_covariate_raster_load(covariate = \"htele\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"covariate name covariate (string)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a database connection — fcn_db_connect","title":"Generate a database connection — fcn_db_connect","text":"Generate database connection","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a database connection — fcn_db_connect","text":"","code":"fcn_db_connect(db_path)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a database connection — fcn_db_connect","text":"db_path Path database","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"Generate grid fishnet input spatial feature class","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"","code":"fcn_fishnet(feature_class)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"feature_class SF object spatial extent fishnet grid_size Grid size km Generate fishnet grid input feature_class","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_db_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Report database paths — fcn_get_db_path","title":"Report database paths — fcn_get_db_path","text":"Report database paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_db_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report database paths — fcn_get_db_path","text":"","code":"fcn_get_db_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_gdb_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GDB object path — fcn_get_gdb_path","title":"Get GDB object path — fcn_get_gdb_path","text":"Get GDB object path","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_gdb_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GDB object path — fcn_get_gdb_path","text":"","code":"fcn_get_gdb_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_grid_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rasterized fishnet — fcn_get_grid_raster","title":"Get rasterized fishnet — fcn_get_grid_raster","text":"Get rasterized fishnet","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_grid_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rasterized fishnet — fcn_get_grid_raster","text":"","code":"fcn_get_grid_raster()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_raster_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster directories — fcn_get_raster_path","title":"Get raster directories — fcn_get_raster_path","text":"Get raster directories","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_raster_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster directories — fcn_get_raster_path","text":"","code":"fcn_get_raster_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","title":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","text":"Get whole state, elements state second argument specified","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","text":"","code":"fcn_get_state(elem = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_study_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get study area in SF format — fcn_get_study_area","title":"Get study area in SF format — fcn_get_study_area","text":"Get study area SF format","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_study_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get study area in SF format — fcn_get_study_area","text":"","code":"fcn_get_study_area()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"Generate reference points extract covariates #' @param input_raster Input raster (SpatRaster)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"","code":"fcn_line_sample_extract_raster(input_raster, line_transect, n = 50)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"line_transect sf object fields TransectID (unique id), Tlength (length transect) -- generated fcn_line_transect_sf n number sample points (including start finish) transect line (precise (100/n)% length -- e.g. n=50 means precise 2% length)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"Create spatial sf object start end point line transects eastings northings","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"","code":"fcn_line_transect_sf(   lineTransect,   colnames = list(Start_Eastings = \"Start_Eastings\", Start_Northings = \"Start_Northings\",     End_Eastings = \"End_Eastings\", End_Northings = \"End_Northings\"),   start_point = F )"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"lineTransect dataframe columns Start_Eastings, Start_Northings, End_Eastings, End_Northings colnames list items Start_Eastings, Start_Northings, End_Eastings, End_Northings, strings corresponding column name start_point boolean indicating whether output sf just start points, whole table","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","title":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","text":"Extract Line transect tables Wrapper function generating line transect tables","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","text":"","code":"fcn_line_transect_table(year)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","title":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","text":"Covariate extraction functions List layers covariate database","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","text":"","code":"fcn_list_covariate_layers()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"List constant covariate layers — fcn_list_covariate_layers_constant","title":"List constant covariate layers — fcn_list_covariate_layers_constant","text":"List constant covariate layers","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List constant covariate layers — fcn_list_covariate_layers_constant","text":"","code":"fcn_list_covariate_layers_constant()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_temporal.html","id":null,"dir":"Reference","previous_headings":"","what":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","title":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","text":"List temporally-variant covariate layers","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_temporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","text":"","code":"fcn_list_covariate_layers_temporal()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_locate_feature_from_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","title":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","text":"Route event layer SF linestrings Converts Route event layer (fcn_route_table) lines","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_locate_feature_from_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","text":"","code":"fcn_locate_feature_from_route(route_table, line_transects)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_new_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate new grid based on grid_size — fcn_new_grid","title":"Generate new grid based on grid_size — fcn_new_grid","text":"Generate new grid based grid_size","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_new_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate new grid based on grid_size — fcn_new_grid","text":"","code":"fcn_new_grid()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Project raster layer to CRS as specified in the environment — fcn_project_raster","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"Project raster layer CRS specified environment","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"","code":"fcn_project_raster(raster)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"raster SpatRaster object projected","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"Linear referencing / dynamic segmentation functions Provides functions perform linear referencing dynamic segmentation line transects.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"","code":"fcn_route_table(feature_class, line_transect)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"feature_class SF object grid line_transect SF object line transect","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"Get Route Table (linear referencing) series linear transects","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"","code":"fcn_route_table_raster(input_raster, line_transect, n = 50)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"input_raster Input raster (SpatRaster) line_transect sf object fields TransectID (unique id), Tlength (length transect) -- generated fcn_line_transect_sf n number sample points (including start finish) transect line (precise (100/n)% length -- e.g. n=50 means precise 2% length)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"Convert covariate sample points route layer (start end covariate value)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"","code":"fcn_sample_point_to_route(extract_table, names)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"extract_table sf feature sampled points, .e. output fcn_line_sample_extract_raster names names covariates extract_table","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Coordinate Reference System — fcn_set_crs","title":"Set Coordinate Reference System — fcn_set_crs","text":"Set Coordinate Reference System","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Coordinate Reference System — fcn_set_crs","text":"","code":"fcn_set_crs(crs)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_db_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set database paths — fcn_set_db_path","title":"Set database paths — fcn_set_db_path","text":"Set database paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_db_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set database paths — fcn_set_db_path","text":"","code":"fcn_set_db_path(db_path, obj = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_gdb_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GDB paths — fcn_set_gdb_path","title":"Set GDB paths — fcn_set_gdb_path","text":"Set GDB paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_gdb_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GDB paths — fcn_set_gdb_path","text":"","code":"fcn_set_gdb_path(db_path, obj = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite grid when default fishnet is generated — fcn_set_grid","title":"Overwrite grid when default fishnet is generated — fcn_set_grid","text":"Overwrite grid default fishnet generated","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite grid when default fishnet is generated — fcn_set_grid","text":"","code":"fcn_set_grid(grid)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Grid Size — fcn_set_grid_size","title":"Set Grid Size — fcn_set_grid_size","text":"Set Grid Size","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Grid Size — fcn_set_grid_size","text":"","code":"fcn_set_grid_size(grid_size)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_home_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set home directory path — fcn_set_home_dir","title":"Set home directory path — fcn_set_home_dir","text":"Set home directory path","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_home_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set home directory path — fcn_set_home_dir","text":"","code":"fcn_set_home_dir(dir)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets environment for storing state and functions for modifying the state — the","title":"Sets environment for storing state and functions for modifying the state — the","text":"Sets environment storing state functions modifying state","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets environment for storing state and functions for modifying the state — the","text":"","code":"the"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sets environment for storing state and functions for modifying the state — the","text":"object class environment length 7.","code":""}]
