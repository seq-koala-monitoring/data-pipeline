[{"path":"https://seq-koala-monitoring.github.io/data-pipeline/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 SEQKoalaDataPipeline authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v01-setup.html","id":"initial-setup","dir":"Articles","previous_headings":"","what":"Initial setup","title":"1. Setup","text":"package relies data directory (home_dir) stores datasets used analysis. first step involves setting path computer directory following files: basedata.gdb: ArcGIS geodatabase study area (seqrp_study_area_2017_mga56) final_covariates.gdb: ArcGIS geodatabase covariate raster layers final_covariates_raster: directory containing GeoTIFF files covariates final_covariates.gdb R read raster files ArcGIS GDB koala_survey_data_ver2_0.gdb: geodatabase containing koala survey data KoalaSurveyData2020_cur.accdb: ACCESS database containing data 2020 onwards SEQkoalaData.accdb: ACCESS database containing data 1996-2015 directory can stored anywhere computer.","code":"data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" fcn_set_home_dir(data_dir) list.files(data_dir) #> [1] \"basedata.gdb\"                    \"final_covariates.gdb\"            #> [3] \"final_covariates_raster\"         \"final_covariates_raster_gda1994\" #> [5] \"KoalaSurveyData.gdb\"             \"KoalaSurveyData2020_cur.accdb\"   #> [7] \"SEQkoalaData.accdb\"              \"SEQkoalaData_info.pdf\""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v01-setup.html","id":"generate-fishnet-grid","dir":"Articles","previous_headings":"","what":"Generate fishnet grid","title":"1. Setup","text":"Grids analysis can generated fly specifying grid size. generating grid calling fcn_set_grid_size, grid feature class stored local environment. Functions require newly generated grid able retrieve grid directly local environment. plot grid see covers study area plot chunk grid_plot GridID column fishnet feature class uniquely identifies grid cell fishnet specific grid_size, following format: “Grid side width (meters)”_“Grid Number”","code":"fcn_set_grid_size(1000) # grid width/ height in meters, and generate grid in local environment #> Simple feature collection with 43472 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 378280 ymin: 6862464 xmax: 554280 ymax: 7109464 #> Projected CRS: GDA2020 / MGA zone 56 #> First 10 features: #>                          geometry  GridID #> 1  POLYGON ((378280 6862464, 3...  1000_1 #> 2  POLYGON ((379280 6862464, 3...  1000_2 #> 3  POLYGON ((380280 6862464, 3...  1000_3 #> 4  POLYGON ((381280 6862464, 3...  1000_4 #> 5  POLYGON ((382280 6862464, 3...  1000_5 #> 6  POLYGON ((383280 6862464, 3...  1000_6 #> 7  POLYGON ((384280 6862464, 3...  1000_7 #> 8  POLYGON ((385280 6862464, 3...  1000_8 #> 9  POLYGON ((386280 6862464, 3...  1000_9 #> 10 POLYGON ((387280 6862464, 3... 1000_10 fishnet <- fcn_get_grid() # Retrieve grid from environment for plotting study_area <- fcn_get_study_area() # Retrieve study area ggplot() +   geom_sf(data = study_area, color = 'gray50', fill = 'gray90') +   geom_sf(data = fishnet, color = 'gray50', fill = NA) +   theme_bw()+   theme(panel.grid = element_blank())"},{"path":[]},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"get-transect-1996-2015-data","dir":"Articles","previous_headings":"Extract data from the database","what":"Get transect (1996-2015) data","title":"2. Get Data","text":"Work progress","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v02-get-data.html","id":"get-line-transect-2020-onwards-data","dir":"Articles","previous_headings":"Extract data from the database","what":"Get line transect (2020 onwards) data","title":"2. Get Data","text":"line transect feature class table can extracted ACCESS database directly one function. Behind function call, R following steps: Establishes ODBC connection ACCESS database Executes SQL queries pull data database Reads columns start end northings eastings Generates spatial representation transect based columns Define bounding box plotting can draw simple plot show line transects particular region ggplot. plot line transects grid cells. plot chunk line_transect_plot","code":"data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" fcn_set_home_dir(data_dir) table_sf_2020 <- fcn_line_transect_sf_2020() fcn_set_grid_size(1000) # grid width/ height in meters, and generate grid in local environment #> Simple feature collection with 43472 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 378280 ymin: 6862464 xmax: 554280 ymax: 7109464 #> Projected CRS: GDA2020 / MGA zone 56 #> First 10 features: #>                          geometry  GridID #> 1  POLYGON ((378280 6862464, 3...  1000_1 #> 2  POLYGON ((379280 6862464, 3...  1000_2 #> 3  POLYGON ((380280 6862464, 3...  1000_3 #> 4  POLYGON ((381280 6862464, 3...  1000_4 #> 5  POLYGON ((382280 6862464, 3...  1000_5 #> 6  POLYGON ((383280 6862464, 3...  1000_6 #> 7  POLYGON ((384280 6862464, 3...  1000_7 #> 8  POLYGON ((385280 6862464, 3...  1000_8 #> 9  POLYGON ((386280 6862464, 3...  1000_9 #> 10 POLYGON ((387280 6862464, 3... 1000_10 fishnet <- fcn_get_grid() # Retrieve grid from environment for plotting bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) bbox_sf <- sf::st_polygon(list(matrix(c(bbox$xlim[1], bbox$ylim[1], bbox$xlim[2], bbox$ylim[1], bbox$xlim[1], bbox$ylim[2], bbox$xlim[2], bbox$ylim[2],bbox$xlim[1], bbox$ylim[1]), ncol=2, byrow=T))) bbox_sf <- sf::st_sfc(bbox_sf) sf::st_crs(bbox_sf) <- fcn_get_state()$crs ggplot() +   geom_sf(data = fishnet, color = 'gray50', fill = NA) +   geom_sf(data = table_sf_2020, color = '#D55E00') +   do.call(coord_sf, bbox) +   theme_bw()+   theme(panel.grid = element_blank())"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v03-linear-referencing.html","id":"linear-referencing-dynamic-segmentation","dir":"Articles","previous_headings":"","what":"Linear referencing / dynamic segmentation","title":"3. Linear Referencing","text":"linear referencing/ dynamic segmentation approach used relate line transects grid information covariate layers. can used derive outputs statistical model, tables generated linear referencing serve purposes. toolbox linear referencing package allows user generate “Route Event Layer” (also referred “Route Event Tables” “Route Table”) fundamental way routes (.e. Transects) represented linear referencing. linear referencing terminology, transect represented “route”. record “Route Event Layer” stores distance start transect “Event” occurred. event can intersection grid cell, certain values within covariate layer. Using fcn_route_table call, can create “Route Event Layer” records “Event” TransectID relates event back transect concerned. function call creates new columns records attributes event: FMEAS: “Measure”, distance start point transect event starts TMEAS: “Measure”, distance start point transect event ends Variable Name (e.g. GridID): value event, case, GridID grid cell “Event” describing Tlength: transect length lpercent: percentage (proportion) transect covered event results event route layer can viewed using fcn_locate_feature_from_route segments line transects based route event layer. operation segments line transects many different small segments - slow route event layer large, especially applied high-resolution grid cells route event layers rasterized covariate layers (described ). many cases, route event layer table sufficient spatial representation linear referencing results, step can inspect results visually. , see line transects successfully segmented border grid cells, colored different ID numbers Grid transects colored last digit GridID: plot chunk linear_referencing_transects","code":"data_dir <- \"M:\\\\Users\\\\uqfcho\\\\Documents\\\\seq-koala-monitoring\\\\working_data\" fcn_set_home_dir(data_dir) table_sf_2020 <- fcn_line_transect_sf_2020() fcn_set_grid_size(1000) # grid width/ height in meters, and generate grid in local environment #> Simple feature collection with 43472 features and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 378280 ymin: 6862464 xmax: 554280 ymax: 7109464 #> Projected CRS: GDA2020 / MGA zone 56 #> First 10 features: #>                          geometry  GridID #> 1  POLYGON ((378280 6862464, 3...  1000_1 #> 2  POLYGON ((379280 6862464, 3...  1000_2 #> 3  POLYGON ((380280 6862464, 3...  1000_3 #> 4  POLYGON ((381280 6862464, 3...  1000_4 #> 5  POLYGON ((382280 6862464, 3...  1000_5 #> 6  POLYGON ((383280 6862464, 3...  1000_6 #> 7  POLYGON ((384280 6862464, 3...  1000_7 #> 8  POLYGON ((385280 6862464, 3...  1000_8 #> 9  POLYGON ((386280 6862464, 3...  1000_9 #> 10 POLYGON ((387280 6862464, 3... 1000_10 fishnet <- fcn_get_grid() # Retrieve grid from environment for plotting bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) route_table <- fcn_route_table(fishnet, table_sf_2020) #> Warning: attribute variables are assumed to be spatially constant #> throughout all geometries head(route_table[route_table$lpercent < 0.5,c('TransectID', 'GridID', 'FMEAS', 'TMEAS', \"Tlength\", \"lpercent\")]) #>             TransectID     GridID    FMEAS     TMEAS   Tlength  lpercent #> 1.1 1.0_0_SOL.20210810 1000_14746 300.0884  484.1095  484.1095 0.3801229 #> 2.1 1.0_1_SOL.20210810 1000_14745 590.6152  705.2055  960.0208 0.1193623 #> 2   1.0_1_SOL.20210810 1000_14569 705.2055  960.0208  960.0208 0.2654269 #> 3   1.0_2_SOL.20210810 1000_14569   0.0000  442.9913 1306.0907 0.3391734 #> 3.1 1.0_2_SOL.20210810 1000_14570 442.9913  765.5946 1306.0907 0.2469991 #> 3.2 1.0_2_SOL.20210810 1000_14746 765.5946 1306.0907 1306.0907 0.4138274 route_features <- fcn_locate_feature_from_route(route_table, table_sf_2020) ggplot() +   geom_sf(data = fishnet, color = 'gray50', fill = 'gray80') +   geom_sf(data = route_features, aes(color = substr(GridID, nchar(GridID), nchar(GridID))), linewidth = 1) +   do.call(coord_sf, bbox) +   scale_color_brewer(palette = \"Set3\") +   labs(color = \"\") +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank())"},{"path":[]},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v04-covariates.html","id":"atemporal-rasters-covariate-extraction","dir":"Articles","previous_headings":"Covariate extraction","what":"Atemporal rasters covariate extraction","title":"4. Covariate extraction","text":"Likewise, capabilities linear referencing can applied extract covariate information Raster files. raster layer can loaded using fcn_covariate_raster_load. plot chunk unnamed-chunk-3 results linear referencing (route event layer) can inspected using approach . Creation segments take . seen outputs, values event layer (red) closely match underlying raster layer (blue). plot chunk htele_covariate","code":"cov <- fcn_covariate_raster_load(\"htele\") cov_route_table <- fcn_route_table_raster(cov, table_sf_2020) terra::plot(cov) head(cov_route_table) #>           TransectID       Date  Tlength    htele     FMEAS    TMEAS #> 1 1.0_0_SOL.20210810 2021-08-10 484.1095 98.12856  39.51914 128.4372 #> 2 1.0_0_SOL.20210810 2021-08-10 484.1095 90.80862 128.43721 167.9564 #> 3 1.0_0_SOL.20210810 2021-08-10 484.1095 93.57124 167.95635 276.6340 #> 4 1.0_0_SOL.20210810 2021-08-10 484.1095 87.75922 276.63400 296.3936 #> 5 1.0_0_SOL.20210810 2021-08-10 484.1095 90.65904 296.39357 434.7106 #> 6 1.0_0_SOL.20210810 2021-08-10 484.1095 99.36454 434.71056 484.1095 #>   segment_length   lpercent #> 1       88.91807 0.18367347 #> 2       39.51914 0.08163265 #> 3      108.67764 0.22448980 #> 4       19.75957 0.04081633 #> 5      138.31700 0.28571429 #> 6       49.39893 0.10204082 cov_route_features <- fcn_locate_feature_from_route(cov_route_table, table_sf_2020) bbox <- list(xlim = c(441430, 449400), ylim = c(6928706, 6936814), expand = F) ext <- terra::ext(bbox$xlim[1], bbox$xlim[2], bbox$ylim[1], bbox$ylim[2]) cov_crop <- terra::crop(cov, ext) limits <- terra::minmax(cov_crop) rast_plot <- ggplot() +   geom_spatraster(data = cov_crop) +   do.call(coord_sf, bbox)+   labs(fill = \"\") +   ggtitle(\"htele: covariate raster\") +   scale_fill_viridis_c(limits = c(limits[1], limits[2])) +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank()) transect_plot <- ggplot() +   geom_sf(data = cov_route_features, aes(color = htele), linewidth = 1) +   do.call(coord_sf, bbox)+   ggtitle(\"htele: extracted from transects\") +   labs(color = \"\") +   scale_color_viridis_c(limits = c(limits[1], limits[2])) +   theme_bw()+   theme(panel.grid = element_blank()) rast_plot + transect_plot + plot_layout(guides = 'collect')"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/articles/v04-covariates.html","id":"spatio-temporal-rasters","dir":"Articles","previous_headings":"Covariate extraction","what":"Spatio-temporal rasters","title":"4. Covariate extraction","text":"Extraction covariates spatio-temporal raster files also supported. algorithm first extracts spatio-temporal rasters multi-layer SpatRaster terra creates Event Route Layer spatio-temporal layers. covariates extracted multi-layer “SpatRaster” (terra package) names raster layers represents dates raster layer. year month raster layers available, dates raster layers assumed taken 15th month. date month expected relatively small effect covariate extracted. covariate value route event layer can matched date survey. covariate value representative date transect surveyed can interpolated following methods: bilinear: bilinear interpolation two closest dates survey date, weighted close survey two dates. survey date earlier later dates covariate layers, earliest latest covariate layer selected respectively nearest: covariate layer closest survey date used “lag1” / “lag2” / “lag3” (work progress): lagged layers – select first, second third layer available earlier survey date. lagged layer available, select earliest layer available. date matching algorithm creates / overwrites “value” column route_table output. preview extracted, interpolated value next recent layer spatio-temporal raster. plot chunk hlwdy_plot","code":"cov_sptemp <- fcn_covariate_raster_load(\"hlwdy\") names(cov_sptemp) #>  [1] \"X199607\" \"X199707\" \"X199807\" \"X199907\" \"X200007\" \"X200107\" \"X200207\" #>  [8] \"X200307\" \"X200407\" \"X200507\" \"X200607\" \"X200707\" \"X200807\" \"X200907\" #> [15] \"X201007\" \"X201107\" \"X201207\" \"X201307\" \"X201407\" \"X201507\" \"X201607\" #> [22] \"X201707\" \"X201807\" \"X201907\" cov_sptemp_route_table <- fcn_route_table_raster(cov_sptemp, table_sf_2020) #> Error in eval(expr, envir, enclos): external pointer is not valid route_table_date_matched <- fcn_covariate_match_date(cov_sptemp_route_table, names(cov_sptemp), method = 'bilinear') head(route_table_date_matched) #>           TransectID       Date  Tlength X199607 X199707 X199807 X199907 #> 1 1.0_0_SOL.20210810 2021-08-10 484.1095     161     164     166     166 #> 2 1.0_0_SOL.20210810 2021-08-10 484.1095     163     166     167     168 #> 3 1.0_0_SOL.20210810 2021-08-10 484.1095     159     160     162     164 #> 4 1.0_0_SOL.20210810 2021-08-10 484.1095     160     162     164     166 #> 5 1.0_0_SOL.20210810 2021-08-10 484.1095     163     167     168     170 #> 6 1.0_0_SOL.20210810 2021-08-10 484.1095     162     164     164     164 #>   X200007 X200107 X200207 X200307 X200407 X200507 X200607 X200707 X200807 #> 1     165     164     164     164     163     163     162     162     163 #> 2     168     169     171     172     169     165     161     158     158 #> 3     166     167     169     170     169     164     158     156     159 #> 4     167     168     169     169     167     163     158     155     157 #> 5     170     171     171     171     168     165     161     159     161 #> 6     164     165     165     165     164     160     156     153     154 #>   X200907 X201007 X201107 X201207 X201307 X201407 X201507 X201607 X201707 #> 1     166     170     172     172     171     168     164     161     161 #> 2     162     166     169     169     168     165     164     163     164 #> 3     167     173     176     174     169     164     161     161     163 #> 4     164     170     174     173     169     165     163     162     163 #> 5     165     171     174     174     170     166     163     162     163 #> 6     158     164     172     176     175     171     164     157     151 #>   X201807 X201907     FMEAS    TMEAS segment_length   lpercent value #> 1     162     167  39.51914 128.4372       88.91807 0.18367347   167 #> 2     162     162 128.43721 167.9564       39.51914 0.08163265   162 #> 3     161     161 167.95635 276.6340      108.67764 0.22448980   161 #> 4     161     161 276.63400 296.3936       19.75957 0.04081633   161 #> 5     162     163 296.39357 434.7106      138.31700 0.28571429   163 #> 6     155     159 434.71056 484.1095       49.39893 0.10204082   159 cov_sptemp_date_matched <- fcn_locate_feature_from_route(route_table_date_matched, table_sf_2020) ext <- terra::ext(bbox$xlim[1], bbox$xlim[2], bbox$ylim[1], bbox$ylim[2]) cov_sptemp_crop <- terra::crop(cov_sptemp, ext) #> Error in eval(expr, envir, enclos): external pointer is not valid limits <- terra::minmax(cov_sptemp_crop) rast_sptemp_plot <- ggplot() +   geom_spatraster(data = cov_sptemp_crop, aes(fill = X201907)) +   do.call(coord_sf, bbox)+   labs(fill = \"\") +   ggtitle(\"hlwdy: 2019/07 woody \\nvegetation cover\") +   scale_fill_viridis_c(limits = c(limits[1], limits[2])) +   #guides(color = 'none')+   theme_bw()+   theme(panel.grid = element_blank()) transect_sptemp_plot <- ggplot() +   geom_sf(data = cov_sptemp_date_matched, aes(color = value), linewidth = 1) +   do.call(coord_sf, bbox)+   ggtitle(\"hlwdy: transects (bilinear)\") +   labs(color = \"\") +   scale_color_viridis_c(limits = c(limits[1], limits[2])) +   theme_bw()+   theme(panel.grid = element_blank()) rast_sptemp_plot + transect_sptemp_plot + plot_layout(guides = 'collect')"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Frankie Cho. Author, maintainer. Jonathan Rhodes. Author.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cho F, Rhodes J (2023). SEQKoalaDataPipeline: South East Queensland Koala Monitoring Data Pipeline. R package version 0.0.0.9000, https://seq-koala-monitoring.github.io/data-pipeline/.","code":"@Manual{,   title = {SEQKoalaDataPipeline: South East Queensland Koala Monitoring Data Pipeline},   author = {Frankie Cho and Jonathan Rhodes},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://seq-koala-monitoring.github.io/data-pipeline/}, }"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"data-processing-pipeline-for-seq-koala-monitoring-data-analysis-project","dir":"","previous_headings":"","what":"South East Queensland Koala Monitoring Data Pipeline","title":"South East Queensland Koala Monitoring Data Pipeline","text":"R package functionality consumes ACCESS databases koala monitoring data outputs tables direct inputs Bayesian state-space model. vignette describes usage toolbox provided custom R package SEQKoalaDataPipeline reads ACCESS databases koala monitoring data, spatial files monitoring transects, rasterised data covariates, produces outputs spatial data model. functions toolbox perform several functions useful producing data outputs statistical models functionalities. Features include limited following: Establish connections ACCESS ODBC Generate grids “fishnets” given spatial resolution around study area generates unique IDs grid cell Produce spatial feature classes (sf) line transects based start end coordinate columns dataframes Linear referencing: calculate proportion , distance segment origin, linear transect lying within grid cell Linear referencing: calculate proportion , distance segments origin, linear transect raster covariate layers Dynamic segmentation: return coordinates koala sightings based distance transect origin (work--progress) Dynamic segmentation: return covariate information koala sighting based linear referencing route tables (work--progress)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"South East Queensland Koala Monitoring Data Pipeline","text":"devtools installed local machine, package can installed using Github.","code":"devtools::install_github(\"seq-koala-monitoring/data-pipeline\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_check_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions — fcn_check_paths","title":"Helper functions — fcn_check_paths","text":"Check paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_check_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions — fcn_check_paths","text":"","code":"fcn_check_paths(path, suffix = \"\", stop_exec = F)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate to linestrings — fcn_coord_to_linestring","title":"Coordinate to linestrings — fcn_coord_to_linestring","text":"Coordinate linestrings","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate to linestrings — fcn_coord_to_linestring","text":"","code":"fcn_coord_to_linestring(   Start_Eastings,   Start_Northings,   End_Eastings,   End_Northings )"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate to SF — fcn_coord_to_points","title":"Coordinate to SF — fcn_coord_to_points","text":"Coordinate SF","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_coord_to_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate to SF — fcn_coord_to_points","text":"","code":"fcn_coord_to_points(Start_Eastings, Start_Northings)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_layer_df.html","id":null,"dir":"Reference","previous_headings":"","what":"List covariate layers as a df — fcn_covariate_layer_df","title":"List covariate layers as a df — fcn_covariate_layer_df","text":"List covariate layers df","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_layer_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List covariate layers as a df — fcn_covariate_layer_df","text":"","code":"fcn_covariate_layer_df(layer = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_match_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","title":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","text":"Get covariate value spatio-temporal raster","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_match_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get covariate value from a spatio-temporal raster — fcn_covariate_match_date","text":"","code":"fcn_covariate_match_date(route_table, col_names, method = \"bilinear\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"Load covariate layer SpatRaster name","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"","code":"fcn_covariate_raster_load(covariate = \"htele\")"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_covariate_raster_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load covariate layer to SpatRaster by name — fcn_covariate_raster_load","text":"covariate name covariate (string)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a database connection — fcn_db_connect","title":"Generate a database connection — fcn_db_connect","text":"Generate database connection","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a database connection — fcn_db_connect","text":"","code":"fcn_db_connect(db_path)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_db_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a database connection — fcn_db_connect","text":"db_path Path database","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"Generate grid fishnet input spatial feature class","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"","code":"fcn_fishnet(feature_class)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_fishnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate grid fishnet with an input spatial feature class — fcn_fishnet","text":"feature_class SF object spatial extent fishnet grid_size Grid size km Generate fishnet grid input feature_class","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_db_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Report database paths — fcn_get_db_path","title":"Report database paths — fcn_get_db_path","text":"Report database paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_db_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report database paths — fcn_get_db_path","text":"","code":"fcn_get_db_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_gdb_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GDB object path — fcn_get_gdb_path","title":"Get GDB object path — fcn_get_gdb_path","text":"Get GDB object path","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_gdb_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GDB object path — fcn_get_gdb_path","text":"","code":"fcn_get_gdb_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_grid_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rasterized fishnet — fcn_get_grid_raster","title":"Get rasterized fishnet — fcn_get_grid_raster","text":"Get rasterized fishnet","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_grid_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rasterized fishnet — fcn_get_grid_raster","text":"","code":"fcn_get_grid_raster()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_raster_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster directories — fcn_get_raster_path","title":"Get raster directories — fcn_get_raster_path","text":"Get raster directories","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_raster_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster directories — fcn_get_raster_path","text":"","code":"fcn_get_raster_path()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","title":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","text":"Get whole state, elements state second argument specified","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the whole state, or elements of the state if a second argument is specified — fcn_get_state","text":"","code":"fcn_get_state(elem = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_study_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get study area in SF format — fcn_get_study_area","title":"Get study area in SF format — fcn_get_study_area","text":"Get study area SF format","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_get_study_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get study area in SF format — fcn_get_study_area","text":"","code":"fcn_get_study_area()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"Generate reference points extract covariates #' @param input_raster Input raster (SpatRaster)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"","code":"fcn_line_sample_extract_raster(input_raster, line_transect, n = 50)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_sample_extract_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate reference points and extract covariates\n#' @param input_raster Input raster (SpatRaster) — fcn_line_sample_extract_raster","text":"line_transect sf object fields TransectID (unique id), Tlength (length transect) -- generated fcn_line_transect_sf n number sample points (including start finish) transect line (precise (100/n)% length -- e.g. n=50 means precise 2% length)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"Create spatial sf object start end point line transects eastings northings","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"","code":"fcn_line_transect_sf(   lineTransect,   colnames = list(Start_Eastings = \"Start_Eastings\", Start_Northings = \"Start_Northings\",     End_Eastings = \"End_Eastings\", End_Northings = \"End_Northings\"),   start_point = F )"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial sf object from start and end point of line transects with eastings and northings — fcn_line_transect_sf","text":"lineTransect dataframe columns Start_Eastings, Start_Northings, End_Eastings, End_Northings colnames list items Start_Eastings, Start_Northings, End_Eastings, End_Northings, strings corresponding column name start_point boolean indicating whether output sf just start points, whole table","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","title":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","text":"Extract Line transect tables Wrapper function generating line transect tables","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_line_transect_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Line transect tables\nWrapper function for generating line transect tables — fcn_line_transect_table","text":"","code":"fcn_line_transect_table(year)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","title":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","text":"Covariate extraction functions List layers covariate database","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariate extraction functions\nList all layers in covariate database — fcn_list_covariate_layers","text":"","code":"fcn_list_covariate_layers()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"List constant covariate layers — fcn_list_covariate_layers_constant","title":"List constant covariate layers — fcn_list_covariate_layers_constant","text":"List constant covariate layers","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List constant covariate layers — fcn_list_covariate_layers_constant","text":"","code":"fcn_list_covariate_layers_constant()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_temporal.html","id":null,"dir":"Reference","previous_headings":"","what":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","title":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","text":"List temporally-variant covariate layers","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_list_covariate_layers_temporal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List temporally-variant covariate layers — fcn_list_covariate_layers_temporal","text":"","code":"fcn_list_covariate_layers_temporal()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_locate_feature_from_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","title":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","text":"Route event layer SF linestrings Converts Route event layer (fcn_route_table) lines","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_locate_feature_from_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Route event layer to SF linestrings\nConverts Route event layer (from fcn_route_table) to lines — fcn_locate_feature_from_route","text":"","code":"fcn_locate_feature_from_route(route_table, line_transects)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_new_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate new grid based on grid_size — fcn_new_grid","title":"Generate new grid based on grid_size — fcn_new_grid","text":"Generate new grid based grid_size","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_new_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate new grid based on grid_size — fcn_new_grid","text":"","code":"fcn_new_grid()"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Project raster layer to CRS as specified in the environment — fcn_project_raster","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"Project raster layer CRS specified environment","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"","code":"fcn_project_raster(raster)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_project_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project raster layer to CRS as specified in the environment — fcn_project_raster","text":"raster SpatRaster object projected","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"Linear referencing / dynamic segmentation functions Provides functions perform linear referencing dynamic segmentation line transects.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"","code":"fcn_route_table(feature_class, line_transect)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear referencing / dynamic segmentation functions\nProvides functions to perform linear referencing and dynamic segmentation of line transects. — fcn_route_table","text":"feature_class SF object grid line_transect SF object line transect","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"Get Route Table (linear referencing) series linear transects","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"","code":"fcn_route_table_raster(input_raster, line_transect, n = 50)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_route_table_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Route Table (linear referencing) for a series of linear transects — fcn_route_table_raster","text":"input_raster Input raster (SpatRaster) line_transect sf object fields TransectID (unique id), Tlength (length transect) -- generated fcn_line_transect_sf n number sample points (including start finish) transect line (precise (100/n)% length -- e.g. n=50 means precise 2% length)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"Convert covariate sample points route layer (start end covariate value)","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"","code":"fcn_sample_point_to_route(extract_table, names)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_sample_point_to_route.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert covariate sample points to route layer (start and end of covariate value) — fcn_sample_point_to_route","text":"extract_table sf feature sampled points, .e. output fcn_line_sample_extract_raster names names covariates extract_table","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Coordinate Reference System — fcn_set_crs","title":"Set Coordinate Reference System — fcn_set_crs","text":"Set Coordinate Reference System","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Coordinate Reference System — fcn_set_crs","text":"","code":"fcn_set_crs(crs)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_db_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set database paths — fcn_set_db_path","title":"Set database paths — fcn_set_db_path","text":"Set database paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_db_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set database paths — fcn_set_db_path","text":"","code":"fcn_set_db_path(db_path, obj = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_gdb_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GDB paths — fcn_set_gdb_path","title":"Set GDB paths — fcn_set_gdb_path","text":"Set GDB paths","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_gdb_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GDB paths — fcn_set_gdb_path","text":"","code":"fcn_set_gdb_path(db_path, obj = NULL)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Overwrite grid when default fishnet is generated — fcn_set_grid","title":"Overwrite grid when default fishnet is generated — fcn_set_grid","text":"Overwrite grid default fishnet generated","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overwrite grid when default fishnet is generated — fcn_set_grid","text":"","code":"fcn_set_grid(grid)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Grid Size — fcn_set_grid_size","title":"Set Grid Size — fcn_set_grid_size","text":"Set Grid Size","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_grid_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Grid Size — fcn_set_grid_size","text":"","code":"fcn_set_grid_size(grid_size)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_home_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set home directory path — fcn_set_home_dir","title":"Set home directory path — fcn_set_home_dir","text":"Set home directory path","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/fcn_set_home_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set home directory path — fcn_set_home_dir","text":"","code":"fcn_set_home_dir(dir)"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets environment for storing state and functions for modifying the state — the","title":"Sets environment for storing state and functions for modifying the state — the","text":"Sets environment storing state functions modifying state","code":""},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets environment for storing state and functions for modifying the state — the","text":"","code":"the"},{"path":"https://seq-koala-monitoring.github.io/data-pipeline/reference/the.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sets environment for storing state and functions for modifying the state — the","text":"object class environment length 7.","code":""}]
